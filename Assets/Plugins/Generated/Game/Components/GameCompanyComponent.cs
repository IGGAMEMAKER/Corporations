//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CompanyComponent company { get { return (CompanyComponent)GetComponent(GameComponentsLookup.Company); } }
    public bool hasCompany { get { return HasComponent(GameComponentsLookup.Company); } }

    public void AddCompany(int newId, string newName, CompanyType newCompanyType) {
        var index = GameComponentsLookup.Company;
        var component = (CompanyComponent)CreateComponent(index, typeof(CompanyComponent));
        component.Id = newId;
        component.Name = newName;
        component.CompanyType = newCompanyType;
        AddComponent(index, component);
    }

    public void ReplaceCompany(int newId, string newName, CompanyType newCompanyType) {
        var index = GameComponentsLookup.Company;
        var component = (CompanyComponent)CreateComponent(index, typeof(CompanyComponent));
        component.Id = newId;
        component.Name = newName;
        component.CompanyType = newCompanyType;
        ReplaceComponent(index, component);
    }

    public void RemoveCompany() {
        RemoveComponent(GameComponentsLookup.Company);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCompany;

    public static Entitas.IMatcher<GameEntity> Company {
        get {
            if (_matcherCompany == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Company);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCompany = matcher;
            }

            return _matcherCompany;
        }
    }
}
