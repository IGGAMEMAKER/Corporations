//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InvestmentProposalsComponent investmentProposals { get { return (InvestmentProposalsComponent)GetComponent(GameComponentsLookup.InvestmentProposals); } }
    public bool hasInvestmentProposals { get { return HasComponent(GameComponentsLookup.InvestmentProposals); } }

    public void AddInvestmentProposals(System.Collections.Generic.List<InvestmentProposal> newProposals) {
        var index = GameComponentsLookup.InvestmentProposals;
        var component = (InvestmentProposalsComponent)CreateComponent(index, typeof(InvestmentProposalsComponent));
        component.Proposals = newProposals;
        AddComponent(index, component);
    }

    public void ReplaceInvestmentProposals(System.Collections.Generic.List<InvestmentProposal> newProposals) {
        var index = GameComponentsLookup.InvestmentProposals;
        var component = (InvestmentProposalsComponent)CreateComponent(index, typeof(InvestmentProposalsComponent));
        component.Proposals = newProposals;
        ReplaceComponent(index, component);
    }

    public void RemoveInvestmentProposals() {
        RemoveComponent(GameComponentsLookup.InvestmentProposals);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInvestmentProposals;

    public static Entitas.IMatcher<GameEntity> InvestmentProposals {
        get {
            if (_matcherInvestmentProposals == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InvestmentProposals);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInvestmentProposals = matcher;
            }

            return _matcherInvestmentProposals;
        }
    }
}
