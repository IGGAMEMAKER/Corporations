//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DevelopmentActiveListenerComponent developmentActiveListener { get { return (DevelopmentActiveListenerComponent)GetComponent(GameComponentsLookup.DevelopmentActiveListener); } }
    public bool hasDevelopmentActiveListener { get { return HasComponent(GameComponentsLookup.DevelopmentActiveListener); } }

    public void AddDevelopmentActiveListener(System.Collections.Generic.List<IDevelopmentActiveListener> newValue) {
        var index = GameComponentsLookup.DevelopmentActiveListener;
        var component = (DevelopmentActiveListenerComponent)CreateComponent(index, typeof(DevelopmentActiveListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDevelopmentActiveListener(System.Collections.Generic.List<IDevelopmentActiveListener> newValue) {
        var index = GameComponentsLookup.DevelopmentActiveListener;
        var component = (DevelopmentActiveListenerComponent)CreateComponent(index, typeof(DevelopmentActiveListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDevelopmentActiveListener() {
        RemoveComponent(GameComponentsLookup.DevelopmentActiveListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDevelopmentActiveListener;

    public static Entitas.IMatcher<GameEntity> DevelopmentActiveListener {
        get {
            if (_matcherDevelopmentActiveListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DevelopmentActiveListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDevelopmentActiveListener = matcher;
            }

            return _matcherDevelopmentActiveListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddDevelopmentActiveListener(IDevelopmentActiveListener value) {
        var listeners = hasDevelopmentActiveListener
            ? developmentActiveListener.value
            : new System.Collections.Generic.List<IDevelopmentActiveListener>();
        listeners.Add(value);
        ReplaceDevelopmentActiveListener(listeners);
    }

    public void RemoveDevelopmentActiveListener(IDevelopmentActiveListener value, bool removeComponentWhenEmpty = true) {
        var listeners = developmentActiveListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveDevelopmentActiveListener();
        } else {
            ReplaceDevelopmentActiveListener(listeners);
        }
    }
}
