//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CorporateCultureComponent corporateCulture { get { return (CorporateCultureComponent)GetComponent(GameComponentsLookup.CorporateCulture); } }
    public bool hasCorporateCulture { get { return HasComponent(GameComponentsLookup.CorporateCulture); } }

    public void AddCorporateCulture(System.Collections.Generic.Dictionary<CorporatePolicy, int> newCulture) {
        var index = GameComponentsLookup.CorporateCulture;
        var component = (CorporateCultureComponent)CreateComponent(index, typeof(CorporateCultureComponent));
        component.Culture = newCulture;
        AddComponent(index, component);
    }

    public void ReplaceCorporateCulture(System.Collections.Generic.Dictionary<CorporatePolicy, int> newCulture) {
        var index = GameComponentsLookup.CorporateCulture;
        var component = (CorporateCultureComponent)CreateComponent(index, typeof(CorporateCultureComponent));
        component.Culture = newCulture;
        ReplaceComponent(index, component);
    }

    public void RemoveCorporateCulture() {
        RemoveComponent(GameComponentsLookup.CorporateCulture);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCorporateCulture;

    public static Entitas.IMatcher<GameEntity> CorporateCulture {
        get {
            if (_matcherCorporateCulture == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CorporateCulture);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCorporateCulture = matcher;
            }

            return _matcherCorporateCulture;
        }
    }
}
