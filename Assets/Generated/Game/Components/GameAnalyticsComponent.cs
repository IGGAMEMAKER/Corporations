//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnalyticsComponent analytics { get { return (AnalyticsComponent)GetComponent(GameComponentsLookup.Analytics); } }
    public bool hasAnalytics { get { return HasComponent(GameComponentsLookup.Analytics); } }

    public void AddAnalytics(int newAnalytics, int newExperimentCount) {
        var index = GameComponentsLookup.Analytics;
        var component = (AnalyticsComponent)CreateComponent(index, typeof(AnalyticsComponent));
        component.Analytics = newAnalytics;
        component.ExperimentCount = newExperimentCount;
        AddComponent(index, component);
    }

    public void ReplaceAnalytics(int newAnalytics, int newExperimentCount) {
        var index = GameComponentsLookup.Analytics;
        var component = (AnalyticsComponent)CreateComponent(index, typeof(AnalyticsComponent));
        component.Analytics = newAnalytics;
        component.ExperimentCount = newExperimentCount;
        ReplaceComponent(index, component);
    }

    public void RemoveAnalytics() {
        RemoveComponent(GameComponentsLookup.Analytics);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnalytics;

    public static Entitas.IMatcher<GameEntity> Analytics {
        get {
            if (_matcherAnalytics == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Analytics);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnalytics = matcher;
            }

            return _matcherAnalytics;
        }
    }
}
