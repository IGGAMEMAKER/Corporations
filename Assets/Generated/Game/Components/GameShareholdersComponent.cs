//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ShareholdersComponent shareholders { get { return (ShareholdersComponent)GetComponent(GameComponentsLookup.Shareholders); } }
    public bool hasShareholders { get { return HasComponent(GameComponentsLookup.Shareholders); } }

    public void AddShareholders(System.Collections.Generic.List<int> newShareholders) {
        var index = GameComponentsLookup.Shareholders;
        var component = (ShareholdersComponent)CreateComponent(index, typeof(ShareholdersComponent));
        component.Shareholders = newShareholders;
        AddComponent(index, component);
    }

    public void ReplaceShareholders(System.Collections.Generic.List<int> newShareholders) {
        var index = GameComponentsLookup.Shareholders;
        var component = (ShareholdersComponent)CreateComponent(index, typeof(ShareholdersComponent));
        component.Shareholders = newShareholders;
        ReplaceComponent(index, component);
    }

    public void RemoveShareholders() {
        RemoveComponent(GameComponentsLookup.Shareholders);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShareholders;

    public static Entitas.IMatcher<GameEntity> Shareholders {
        get {
            if (_matcherShareholders == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Shareholders);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShareholders = matcher;
            }

            return _matcherShareholders;
        }
    }
}
