//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyCompanyListenerComponent anyCompanyListener { get { return (AnyCompanyListenerComponent)GetComponent(GameComponentsLookup.AnyCompanyListener); } }
    public bool hasAnyCompanyListener { get { return HasComponent(GameComponentsLookup.AnyCompanyListener); } }

    public void AddAnyCompanyListener(System.Collections.Generic.List<IAnyCompanyListener> newValue) {
        var index = GameComponentsLookup.AnyCompanyListener;
        var component = (AnyCompanyListenerComponent)CreateComponent(index, typeof(AnyCompanyListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyCompanyListener(System.Collections.Generic.List<IAnyCompanyListener> newValue) {
        var index = GameComponentsLookup.AnyCompanyListener;
        var component = (AnyCompanyListenerComponent)CreateComponent(index, typeof(AnyCompanyListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyCompanyListener() {
        RemoveComponent(GameComponentsLookup.AnyCompanyListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyCompanyListener;

    public static Entitas.IMatcher<GameEntity> AnyCompanyListener {
        get {
            if (_matcherAnyCompanyListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyCompanyListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyCompanyListener = matcher;
            }

            return _matcherAnyCompanyListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyCompanyListener(IAnyCompanyListener value) {
        var listeners = hasAnyCompanyListener
            ? anyCompanyListener.value
            : new System.Collections.Generic.List<IAnyCompanyListener>();
        listeners.Add(value);
        ReplaceAnyCompanyListener(listeners);
    }

    public void RemoveAnyCompanyListener(IAnyCompanyListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyCompanyListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyCompanyListener();
        } else {
            ReplaceAnyCompanyListener(listeners);
        }
    }
}
