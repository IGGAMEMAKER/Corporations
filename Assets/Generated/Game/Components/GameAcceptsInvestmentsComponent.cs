//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AcceptsInvestmentsComponent acceptsInvestments { get { return (AcceptsInvestmentsComponent)GetComponent(GameComponentsLookup.AcceptsInvestments); } }
    public bool hasAcceptsInvestments { get { return HasComponent(GameComponentsLookup.AcceptsInvestments); } }

    public void AddAcceptsInvestments(int newDaysLeft) {
        var index = GameComponentsLookup.AcceptsInvestments;
        var component = (AcceptsInvestmentsComponent)CreateComponent(index, typeof(AcceptsInvestmentsComponent));
        component.DaysLeft = newDaysLeft;
        AddComponent(index, component);
    }

    public void ReplaceAcceptsInvestments(int newDaysLeft) {
        var index = GameComponentsLookup.AcceptsInvestments;
        var component = (AcceptsInvestmentsComponent)CreateComponent(index, typeof(AcceptsInvestmentsComponent));
        component.DaysLeft = newDaysLeft;
        ReplaceComponent(index, component);
    }

    public void RemoveAcceptsInvestments() {
        RemoveComponent(GameComponentsLookup.AcceptsInvestments);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAcceptsInvestments;

    public static Entitas.IMatcher<GameEntity> AcceptsInvestments {
        get {
            if (_matcherAcceptsInvestments == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AcceptsInvestments);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAcceptsInvestments = matcher;
            }

            return _matcherAcceptsInvestments;
        }
    }
}
