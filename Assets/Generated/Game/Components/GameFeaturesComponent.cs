//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FeaturesComponent features { get { return (FeaturesComponent)GetComponent(GameComponentsLookup.Features); } }
    public bool hasFeatures { get { return HasComponent(GameComponentsLookup.Features); } }

    public void AddFeatures(System.Collections.Generic.Dictionary<ProductImprovement, int> newFeatures, int newCount) {
        var index = GameComponentsLookup.Features;
        var component = (FeaturesComponent)CreateComponent(index, typeof(FeaturesComponent));
        component.features = newFeatures;
        component.Count = newCount;
        AddComponent(index, component);
    }

    public void ReplaceFeatures(System.Collections.Generic.Dictionary<ProductImprovement, int> newFeatures, int newCount) {
        var index = GameComponentsLookup.Features;
        var component = (FeaturesComponent)CreateComponent(index, typeof(FeaturesComponent));
        component.features = newFeatures;
        component.Count = newCount;
        ReplaceComponent(index, component);
    }

    public void RemoveFeatures() {
        RemoveComponent(GameComponentsLookup.Features);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFeatures;

    public static Entitas.IMatcher<GameEntity> Features {
        get {
            if (_matcherFeatures == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Features);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFeatures = matcher;
            }

            return _matcherFeatures;
        }
    }
}
