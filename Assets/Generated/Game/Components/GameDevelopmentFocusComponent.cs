//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DevelopmentFocusComponent developmentFocus { get { return (DevelopmentFocusComponent)GetComponent(GameComponentsLookup.DevelopmentFocus); } }
    public bool hasDevelopmentFocus { get { return HasComponent(GameComponentsLookup.DevelopmentFocus); } }

    public void AddDevelopmentFocus(DevelopmentFocus newFocus) {
        var index = GameComponentsLookup.DevelopmentFocus;
        var component = (DevelopmentFocusComponent)CreateComponent(index, typeof(DevelopmentFocusComponent));
        component.Focus = newFocus;
        AddComponent(index, component);
    }

    public void ReplaceDevelopmentFocus(DevelopmentFocus newFocus) {
        var index = GameComponentsLookup.DevelopmentFocus;
        var component = (DevelopmentFocusComponent)CreateComponent(index, typeof(DevelopmentFocusComponent));
        component.Focus = newFocus;
        ReplaceComponent(index, component);
    }

    public void RemoveDevelopmentFocus() {
        RemoveComponent(GameComponentsLookup.DevelopmentFocus);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDevelopmentFocus;

    public static Entitas.IMatcher<GameEntity> DevelopmentFocus {
        get {
            if (_matcherDevelopmentFocus == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DevelopmentFocus);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDevelopmentFocus = matcher;
            }

            return _matcherDevelopmentFocus;
        }
    }
}
