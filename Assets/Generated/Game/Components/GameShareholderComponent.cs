//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ShareholderComponent shareholder { get { return (ShareholderComponent)GetComponent(GameComponentsLookup.Shareholder); } }
    public bool hasShareholder { get { return HasComponent(GameComponentsLookup.Shareholder); } }

    public void AddShareholder(int newId, string newName) {
        var index = GameComponentsLookup.Shareholder;
        var component = (ShareholderComponent)CreateComponent(index, typeof(ShareholderComponent));
        component.Id = newId;
        component.Name = newName;
        AddComponent(index, component);
    }

    public void ReplaceShareholder(int newId, string newName) {
        var index = GameComponentsLookup.Shareholder;
        var component = (ShareholderComponent)CreateComponent(index, typeof(ShareholderComponent));
        component.Id = newId;
        component.Name = newName;
        ReplaceComponent(index, component);
    }

    public void RemoveShareholder() {
        RemoveComponent(GameComponentsLookup.Shareholder);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShareholder;

    public static Entitas.IMatcher<GameEntity> Shareholder {
        get {
            if (_matcherShareholder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Shareholder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShareholder = matcher;
            }

            return _matcherShareholder;
        }
    }
}
