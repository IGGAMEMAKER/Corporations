//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EventUpgradeAnalyticsComponent eventUpgradeAnalytics { get { return (EventUpgradeAnalyticsComponent)GetComponent(GameComponentsLookup.EventUpgradeAnalytics); } }
    public bool hasEventUpgradeAnalytics { get { return HasComponent(GameComponentsLookup.EventUpgradeAnalytics); } }

    public void AddEventUpgradeAnalytics(int newProductId) {
        var index = GameComponentsLookup.EventUpgradeAnalytics;
        var component = (EventUpgradeAnalyticsComponent)CreateComponent(index, typeof(EventUpgradeAnalyticsComponent));
        component.productId = newProductId;
        AddComponent(index, component);
    }

    public void ReplaceEventUpgradeAnalytics(int newProductId) {
        var index = GameComponentsLookup.EventUpgradeAnalytics;
        var component = (EventUpgradeAnalyticsComponent)CreateComponent(index, typeof(EventUpgradeAnalyticsComponent));
        component.productId = newProductId;
        ReplaceComponent(index, component);
    }

    public void RemoveEventUpgradeAnalytics() {
        RemoveComponent(GameComponentsLookup.EventUpgradeAnalytics);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEventUpgradeAnalytics;

    public static Entitas.IMatcher<GameEntity> EventUpgradeAnalytics {
        get {
            if (_matcherEventUpgradeAnalytics == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EventUpgradeAnalytics);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEventUpgradeAnalytics = matcher;
            }

            return _matcherEventUpgradeAnalytics;
        }
    }
}
