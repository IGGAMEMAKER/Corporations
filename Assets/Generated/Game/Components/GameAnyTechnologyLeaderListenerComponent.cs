//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyTechnologyLeaderListenerComponent anyTechnologyLeaderListener { get { return (AnyTechnologyLeaderListenerComponent)GetComponent(GameComponentsLookup.AnyTechnologyLeaderListener); } }
    public bool hasAnyTechnologyLeaderListener { get { return HasComponent(GameComponentsLookup.AnyTechnologyLeaderListener); } }

    public void AddAnyTechnologyLeaderListener(System.Collections.Generic.List<IAnyTechnologyLeaderListener> newValue) {
        var index = GameComponentsLookup.AnyTechnologyLeaderListener;
        var component = (AnyTechnologyLeaderListenerComponent)CreateComponent(index, typeof(AnyTechnologyLeaderListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyTechnologyLeaderListener(System.Collections.Generic.List<IAnyTechnologyLeaderListener> newValue) {
        var index = GameComponentsLookup.AnyTechnologyLeaderListener;
        var component = (AnyTechnologyLeaderListenerComponent)CreateComponent(index, typeof(AnyTechnologyLeaderListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyTechnologyLeaderListener() {
        RemoveComponent(GameComponentsLookup.AnyTechnologyLeaderListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyTechnologyLeaderListener;

    public static Entitas.IMatcher<GameEntity> AnyTechnologyLeaderListener {
        get {
            if (_matcherAnyTechnologyLeaderListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyTechnologyLeaderListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyTechnologyLeaderListener = matcher;
            }

            return _matcherAnyTechnologyLeaderListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyTechnologyLeaderListener(IAnyTechnologyLeaderListener value) {
        var listeners = hasAnyTechnologyLeaderListener
            ? anyTechnologyLeaderListener.value
            : new System.Collections.Generic.List<IAnyTechnologyLeaderListener>();
        listeners.Add(value);
        ReplaceAnyTechnologyLeaderListener(listeners);
    }

    public void RemoveAnyTechnologyLeaderListener(IAnyTechnologyLeaderListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyTechnologyLeaderListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyTechnologyLeaderListener();
        } else {
            ReplaceAnyTechnologyLeaderListener(listeners);
        }
    }
}
