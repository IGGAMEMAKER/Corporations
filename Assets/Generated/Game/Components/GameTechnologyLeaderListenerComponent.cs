//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TechnologyLeaderListenerComponent technologyLeaderListener { get { return (TechnologyLeaderListenerComponent)GetComponent(GameComponentsLookup.TechnologyLeaderListener); } }
    public bool hasTechnologyLeaderListener { get { return HasComponent(GameComponentsLookup.TechnologyLeaderListener); } }

    public void AddTechnologyLeaderListener(System.Collections.Generic.List<ITechnologyLeaderListener> newValue) {
        var index = GameComponentsLookup.TechnologyLeaderListener;
        var component = (TechnologyLeaderListenerComponent)CreateComponent(index, typeof(TechnologyLeaderListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTechnologyLeaderListener(System.Collections.Generic.List<ITechnologyLeaderListener> newValue) {
        var index = GameComponentsLookup.TechnologyLeaderListener;
        var component = (TechnologyLeaderListenerComponent)CreateComponent(index, typeof(TechnologyLeaderListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTechnologyLeaderListener() {
        RemoveComponent(GameComponentsLookup.TechnologyLeaderListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTechnologyLeaderListener;

    public static Entitas.IMatcher<GameEntity> TechnologyLeaderListener {
        get {
            if (_matcherTechnologyLeaderListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TechnologyLeaderListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTechnologyLeaderListener = matcher;
            }

            return _matcherTechnologyLeaderListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTechnologyLeaderListener(ITechnologyLeaderListener value) {
        var listeners = hasTechnologyLeaderListener
            ? technologyLeaderListener.value
            : new System.Collections.Generic.List<ITechnologyLeaderListener>();
        listeners.Add(value);
        ReplaceTechnologyLeaderListener(listeners);
    }

    public void RemoveTechnologyLeaderListener(ITechnologyLeaderListener value, bool removeComponentWhenEmpty = true) {
        var listeners = technologyLeaderListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTechnologyLeaderListener();
        } else {
            ReplaceTechnologyLeaderListener(listeners);
        }
    }
}
