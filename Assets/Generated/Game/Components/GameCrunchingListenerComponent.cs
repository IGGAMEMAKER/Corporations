//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CrunchingListenerComponent crunchingListener { get { return (CrunchingListenerComponent)GetComponent(GameComponentsLookup.CrunchingListener); } }
    public bool hasCrunchingListener { get { return HasComponent(GameComponentsLookup.CrunchingListener); } }

    public void AddCrunchingListener(System.Collections.Generic.List<ICrunchingListener> newValue) {
        var index = GameComponentsLookup.CrunchingListener;
        var component = (CrunchingListenerComponent)CreateComponent(index, typeof(CrunchingListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCrunchingListener(System.Collections.Generic.List<ICrunchingListener> newValue) {
        var index = GameComponentsLookup.CrunchingListener;
        var component = (CrunchingListenerComponent)CreateComponent(index, typeof(CrunchingListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCrunchingListener() {
        RemoveComponent(GameComponentsLookup.CrunchingListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCrunchingListener;

    public static Entitas.IMatcher<GameEntity> CrunchingListener {
        get {
            if (_matcherCrunchingListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CrunchingListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCrunchingListener = matcher;
            }

            return _matcherCrunchingListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddCrunchingListener(ICrunchingListener value) {
        var listeners = hasCrunchingListener
            ? crunchingListener.value
            : new System.Collections.Generic.List<ICrunchingListener>();
        listeners.Add(value);
        ReplaceCrunchingListener(listeners);
    }

    public void RemoveCrunchingListener(ICrunchingListener value, bool removeComponentWhenEmpty = true) {
        var listeners = crunchingListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCrunchingListener();
        } else {
            ReplaceCrunchingListener(listeners);
        }
    }
}
