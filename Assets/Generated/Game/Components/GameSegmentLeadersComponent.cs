//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SegmentLeadersComponent segmentLeaders { get { return (SegmentLeadersComponent)GetComponent(GameComponentsLookup.SegmentLeaders); } }
    public bool hasSegmentLeaders { get { return HasComponent(GameComponentsLookup.SegmentLeaders); } }

    public void AddSegmentLeaders(System.Collections.Generic.Dictionary<UserType, int> newLeaders) {
        var index = GameComponentsLookup.SegmentLeaders;
        var component = (SegmentLeadersComponent)CreateComponent(index, typeof(SegmentLeadersComponent));
        component.Leaders = newLeaders;
        AddComponent(index, component);
    }

    public void ReplaceSegmentLeaders(System.Collections.Generic.Dictionary<UserType, int> newLeaders) {
        var index = GameComponentsLookup.SegmentLeaders;
        var component = (SegmentLeadersComponent)CreateComponent(index, typeof(SegmentLeadersComponent));
        component.Leaders = newLeaders;
        ReplaceComponent(index, component);
    }

    public void RemoveSegmentLeaders() {
        RemoveComponent(GameComponentsLookup.SegmentLeaders);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSegmentLeaders;

    public static Entitas.IMatcher<GameEntity> SegmentLeaders {
        get {
            if (_matcherSegmentLeaders == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SegmentLeaders);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSegmentLeaders = matcher;
            }

            return _matcherSegmentLeaders;
        }
    }
}
