//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public NotificationsComponent notifications { get { return (NotificationsComponent)GetComponent(GameComponentsLookup.Notifications); } }
    public bool hasNotifications { get { return HasComponent(GameComponentsLookup.Notifications); } }

    public void AddNotifications(System.Collections.Generic.List<NotificationMessage> newNotifications) {
        var index = GameComponentsLookup.Notifications;
        var component = (NotificationsComponent)CreateComponent(index, typeof(NotificationsComponent));
        component.Notifications = newNotifications;
        AddComponent(index, component);
    }

    public void ReplaceNotifications(System.Collections.Generic.List<NotificationMessage> newNotifications) {
        var index = GameComponentsLookup.Notifications;
        var component = (NotificationsComponent)CreateComponent(index, typeof(NotificationsComponent));
        component.Notifications = newNotifications;
        ReplaceComponent(index, component);
    }

    public void RemoveNotifications() {
        RemoveComponent(GameComponentsLookup.Notifications);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNotifications;

    public static Entitas.IMatcher<GameEntity> Notifications {
        get {
            if (_matcherNotifications == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Notifications);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNotifications = matcher;
            }

            return _matcherNotifications;
        }
    }
}
