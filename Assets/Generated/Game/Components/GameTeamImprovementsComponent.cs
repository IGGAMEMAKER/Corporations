//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TeamImprovementsComponent teamImprovements { get { return (TeamImprovementsComponent)GetComponent(GameComponentsLookup.TeamImprovements); } }
    public bool hasTeamImprovements { get { return HasComponent(GameComponentsLookup.TeamImprovements); } }

    public void AddTeamImprovements(System.Collections.Generic.Dictionary<TeamUpgrade, int> newUpgrades) {
        var index = GameComponentsLookup.TeamImprovements;
        var component = (TeamImprovementsComponent)CreateComponent(index, typeof(TeamImprovementsComponent));
        component.Upgrades = newUpgrades;
        AddComponent(index, component);
    }

    public void ReplaceTeamImprovements(System.Collections.Generic.Dictionary<TeamUpgrade, int> newUpgrades) {
        var index = GameComponentsLookup.TeamImprovements;
        var component = (TeamImprovementsComponent)CreateComponent(index, typeof(TeamImprovementsComponent));
        component.Upgrades = newUpgrades;
        ReplaceComponent(index, component);
    }

    public void RemoveTeamImprovements() {
        RemoveComponent(GameComponentsLookup.TeamImprovements);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTeamImprovements;

    public static Entitas.IMatcher<GameEntity> TeamImprovements {
        get {
            if (_matcherTeamImprovements == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TeamImprovements);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTeamImprovements = matcher;
            }

            return _matcherTeamImprovements;
        }
    }
}
