//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ExpertiseComponent expertise { get { return (ExpertiseComponent)GetComponent(GameComponentsLookup.Expertise); } }
    public bool hasExpertise { get { return HasComponent(GameComponentsLookup.Expertise); } }

    public void AddExpertise(int newExpertiseLevel) {
        var index = GameComponentsLookup.Expertise;
        var component = (ExpertiseComponent)CreateComponent(index, typeof(ExpertiseComponent));
        component.ExpertiseLevel = newExpertiseLevel;
        AddComponent(index, component);
    }

    public void ReplaceExpertise(int newExpertiseLevel) {
        var index = GameComponentsLookup.Expertise;
        var component = (ExpertiseComponent)CreateComponent(index, typeof(ExpertiseComponent));
        component.ExpertiseLevel = newExpertiseLevel;
        ReplaceComponent(index, component);
    }

    public void RemoveExpertise() {
        RemoveComponent(GameComponentsLookup.Expertise);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherExpertise;

    public static Entitas.IMatcher<GameEntity> Expertise {
        get {
            if (_matcherExpertise == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Expertise);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherExpertise = matcher;
            }

            return _matcherExpertise;
        }
    }
}
