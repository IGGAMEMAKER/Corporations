//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DevelopmentFocusListenerComponent developmentFocusListener { get { return (DevelopmentFocusListenerComponent)GetComponent(GameComponentsLookup.DevelopmentFocusListener); } }
    public bool hasDevelopmentFocusListener { get { return HasComponent(GameComponentsLookup.DevelopmentFocusListener); } }

    public void AddDevelopmentFocusListener(System.Collections.Generic.List<IDevelopmentFocusListener> newValue) {
        var index = GameComponentsLookup.DevelopmentFocusListener;
        var component = (DevelopmentFocusListenerComponent)CreateComponent(index, typeof(DevelopmentFocusListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDevelopmentFocusListener(System.Collections.Generic.List<IDevelopmentFocusListener> newValue) {
        var index = GameComponentsLookup.DevelopmentFocusListener;
        var component = (DevelopmentFocusListenerComponent)CreateComponent(index, typeof(DevelopmentFocusListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDevelopmentFocusListener() {
        RemoveComponent(GameComponentsLookup.DevelopmentFocusListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDevelopmentFocusListener;

    public static Entitas.IMatcher<GameEntity> DevelopmentFocusListener {
        get {
            if (_matcherDevelopmentFocusListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DevelopmentFocusListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDevelopmentFocusListener = matcher;
            }

            return _matcherDevelopmentFocusListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddDevelopmentFocusListener(IDevelopmentFocusListener value) {
        var listeners = hasDevelopmentFocusListener
            ? developmentFocusListener.value
            : new System.Collections.Generic.List<IDevelopmentFocusListener>();
        listeners.Add(value);
        ReplaceDevelopmentFocusListener(listeners);
    }

    public void RemoveDevelopmentFocusListener(IDevelopmentFocusListener value, bool removeComponentWhenEmpty = true) {
        var listeners = developmentFocusListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveDevelopmentFocusListener();
        } else {
            ReplaceDevelopmentFocusListener(listeners);
        }
    }
}
