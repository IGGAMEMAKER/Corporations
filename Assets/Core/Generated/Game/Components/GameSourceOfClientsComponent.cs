//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SourceOfClientsComponent sourceOfClients { get { return (SourceOfClientsComponent)GetComponent(GameComponentsLookup.SourceOfClients); } }
    public bool hasSourceOfClients { get { return HasComponent(GameComponentsLookup.SourceOfClients); } }

    public void AddSourceOfClients(System.Collections.Generic.Dictionary<int, long> newChannels) {
        var index = GameComponentsLookup.SourceOfClients;
        var component = (SourceOfClientsComponent)CreateComponent(index, typeof(SourceOfClientsComponent));
        component.Channels = newChannels;
        AddComponent(index, component);
    }

    public void ReplaceSourceOfClients(System.Collections.Generic.Dictionary<int, long> newChannels) {
        var index = GameComponentsLookup.SourceOfClients;
        var component = (SourceOfClientsComponent)CreateComponent(index, typeof(SourceOfClientsComponent));
        component.Channels = newChannels;
        ReplaceComponent(index, component);
    }

    public void RemoveSourceOfClients() {
        RemoveComponent(GameComponentsLookup.SourceOfClients);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSourceOfClients;

    public static Entitas.IMatcher<GameEntity> SourceOfClients {
        get {
            if (_matcherSourceOfClients == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SourceOfClients);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSourceOfClients = matcher;
            }

            return _matcherSourceOfClients;
        }
    }
}
