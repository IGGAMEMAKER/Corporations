//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SupportUpgradesComponent supportUpgrades { get { return (SupportUpgradesComponent)GetComponent(GameComponentsLookup.SupportUpgrades); } }
    public bool hasSupportUpgrades { get { return HasComponent(GameComponentsLookup.SupportUpgrades); } }

    public void AddSupportUpgrades(System.Collections.Generic.Dictionary<string, int> newUpgrades) {
        var index = GameComponentsLookup.SupportUpgrades;
        var component = (SupportUpgradesComponent)CreateComponent(index, typeof(SupportUpgradesComponent));
        component.Upgrades = newUpgrades;
        AddComponent(index, component);
    }

    public void ReplaceSupportUpgrades(System.Collections.Generic.Dictionary<string, int> newUpgrades) {
        var index = GameComponentsLookup.SupportUpgrades;
        var component = (SupportUpgradesComponent)CreateComponent(index, typeof(SupportUpgradesComponent));
        component.Upgrades = newUpgrades;
        ReplaceComponent(index, component);
    }

    public void RemoveSupportUpgrades() {
        RemoveComponent(GameComponentsLookup.SupportUpgrades);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSupportUpgrades;

    public static Entitas.IMatcher<GameEntity> SupportUpgrades {
        get {
            if (_matcherSupportUpgrades == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SupportUpgrades);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSupportUpgrades = matcher;
            }

            return _matcherSupportUpgrades;
        }
    }
}
