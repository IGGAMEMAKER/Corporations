//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public OwningsComponent ownings { get { return (OwningsComponent)GetComponent(GameComponentsLookup.Ownings); } }
    public bool hasOwnings { get { return HasComponent(GameComponentsLookup.Ownings); } }

    public void AddOwnings(System.Collections.Generic.List<int> newHoldings) {
        var index = GameComponentsLookup.Ownings;
        var component = (OwningsComponent)CreateComponent(index, typeof(OwningsComponent));
        component.Holdings = newHoldings;
        AddComponent(index, component);
    }

    public void ReplaceOwnings(System.Collections.Generic.List<int> newHoldings) {
        var index = GameComponentsLookup.Ownings;
        var component = (OwningsComponent)CreateComponent(index, typeof(OwningsComponent));
        component.Holdings = newHoldings;
        ReplaceComponent(index, component);
    }

    public void RemoveOwnings() {
        RemoveComponent(GameComponentsLookup.Ownings);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOwnings;

    public static Entitas.IMatcher<GameEntity> Ownings {
        get {
            if (_matcherOwnings == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Ownings);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOwnings = matcher;
            }

            return _matcherOwnings;
        }
    }
}
