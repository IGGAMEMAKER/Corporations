//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ShareholdersListenerComponent shareholdersListener { get { return (ShareholdersListenerComponent)GetComponent(GameComponentsLookup.ShareholdersListener); } }
    public bool hasShareholdersListener { get { return HasComponent(GameComponentsLookup.ShareholdersListener); } }

    public void AddShareholdersListener(System.Collections.Generic.List<IShareholdersListener> newValue) {
        var index = GameComponentsLookup.ShareholdersListener;
        var component = (ShareholdersListenerComponent)CreateComponent(index, typeof(ShareholdersListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceShareholdersListener(System.Collections.Generic.List<IShareholdersListener> newValue) {
        var index = GameComponentsLookup.ShareholdersListener;
        var component = (ShareholdersListenerComponent)CreateComponent(index, typeof(ShareholdersListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveShareholdersListener() {
        RemoveComponent(GameComponentsLookup.ShareholdersListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShareholdersListener;

    public static Entitas.IMatcher<GameEntity> ShareholdersListener {
        get {
            if (_matcherShareholdersListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ShareholdersListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShareholdersListener = matcher;
            }

            return _matcherShareholdersListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddShareholdersListener(IShareholdersListener value) {
        var listeners = hasShareholdersListener
            ? shareholdersListener.value
            : new System.Collections.Generic.List<IShareholdersListener>();
        listeners.Add(value);
        ReplaceShareholdersListener(listeners);
    }

    public void RemoveShareholdersListener(IShareholdersListener value, bool removeComponentWhenEmpty = true) {
        var listeners = shareholdersListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveShareholdersListener();
        } else {
            ReplaceShareholdersListener(listeners);
        }
    }
}
