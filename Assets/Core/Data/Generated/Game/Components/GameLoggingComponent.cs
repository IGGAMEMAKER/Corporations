//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LoggingComponent logging { get { return (LoggingComponent)GetComponent(GameComponentsLookup.Logging); } }
    public bool hasLogging { get { return HasComponent(GameComponentsLookup.Logging); } }

    public void AddLogging(System.Collections.Generic.List<string> newLogs) {
        var index = GameComponentsLookup.Logging;
        var component = (LoggingComponent)CreateComponent(index, typeof(LoggingComponent));
        component.Logs = newLogs;
        AddComponent(index, component);
    }

    public void ReplaceLogging(System.Collections.Generic.List<string> newLogs) {
        var index = GameComponentsLookup.Logging;
        var component = (LoggingComponent)CreateComponent(index, typeof(LoggingComponent));
        component.Logs = newLogs;
        ReplaceComponent(index, component);
    }

    public void RemoveLogging() {
        RemoveComponent(GameComponentsLookup.Logging);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLogging;

    public static Entitas.IMatcher<GameEntity> Logging {
        get {
            if (_matcherLogging == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Logging);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLogging = matcher;
            }

            return _matcherLogging;
        }
    }
}
